<Page
    x:Class="dueltank.Views.Shell.MainShellView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:dueltank"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="using:dueltank.ViewModels"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:vms="using:dueltank.ViewModels.Shell"
    xmlns:infracommon="using:dueltank.ViewModels.Infrastructure.Common"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <Page.DataContext>
        <vms:MainShellViewModel/>
    </Page.DataContext>

    <Page.Resources>

        <!-- NavigationView data template -->
        <DataTemplate x:Key="NavigationItemDataTemplate" x:DataType="vms:NavigationItem">
            <NavigationViewItem Content="{x:Bind Label}" Tag="{x:Bind Tag}">
                <NavigationViewItem.Icon>
                    <FontIcon FontFamily="{x:Bind FontFamily}" Glyph="{x:Bind Glyph}"/>
                </NavigationViewItem.Icon>
            </NavigationViewItem>
        </DataTemplate>

        <DataTemplate x:Name="NavigationViewItemProfile" x:DataType="infracommon:UserInfo">
            <Grid Width="300" Height="40">
                <Grid IsTapEnabled="False">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="32" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="4" />
                    </Grid.ColumnDefinitions>
                    <Viewbox Margin="-2,9,0,9" HorizontalAlignment="Left">
                        <PersonPicture ProfilePicture="{x:Bind PictureSource, Converter={StaticResource ObjectToImageConverter}}" DisplayName="{x:Bind DisplayName}"/>
                    </Viewbox>
                    <TextBlock Grid.Column="1" Text="{x:Bind DisplayName}" VerticalAlignment="Center" />
                </Grid>
                <Button Margin="-4,0,0,0" BorderThickness="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Opacity="0" />
            </Grid>
        </DataTemplate>


    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <!--title bar row-->
            <RowDefinition Height="Auto" />
            <!--page content row-->
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>


        <!--title bar. Title bar area does not  support firing click or tap events-->
        <Grid Grid.Row="0" Style="{StaticResource AppTitleBarStyle}">
            <!-- Title (non-clickable layer) -->
            <TextBlock x:Name="AppTitleTextBlock" Text="{Binding AppTitle}" Foreground="White" VerticalAlignment="Center" Style="{StaticResource CaptionTextBlockStyle}"/>

            <!-- title bar area (Middle layer) Trick: set this as custom title bar-->
            <Grid x:Name="trickyTitleBar" Background="Transparent"/>

            <!-- Full screen button (clickable layer) -->
            <Grid HorizontalAlignment="Left">
                <Button x:Name="NavigationBackButton" Foreground="White" Style="{StaticResource NavigationBackButtonSmallStyle}">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Click">
                            <core:EventTriggerBehavior.Actions>
                                <core:InvokeCommandAction Command="{Binding BackButtonInvoked}" />
                            </core:EventTriggerBehavior.Actions>
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </Button>
            </Grid>
        </Grid>

        <!--content grid-->
        <Grid Grid.Row="1">
            <NavigationView
                x:Name="navigationView"
                AlwaysShowHeader="False" 
                PaneTitle="{Binding HamburgerTitle}" 
                IsPaneOpen="{Binding IsPaneOpen, Mode=TwoWay}"
                IsBackButtonVisible="Collapsed"
                MenuItemsSource="{Binding NavigationViewItems}"
                MenuItemTemplate="{StaticResource NavigationItemDataTemplate}"
                SelectedItem="{Binding SelectedItem, Mode=TwoWay}">

                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="SelectionChanged">
                        <core:EventTriggerBehavior.Actions>
                            <core:InvokeCommandAction Command="{Binding NavigationItemInvoked}" />
                        </core:EventTriggerBehavior.Actions>
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>

                <NavigationView.Content>
                    <Frame x:Name="ContentFrame">
                        <Frame.ContentTransitions>
                            <TransitionCollection>
                                <NavigationThemeTransition />
                            </TransitionCollection>
                        </Frame.ContentTransitions>
                    </Frame>
                </NavigationView.Content>

                <NavigationView.PaneFooter>
                    <StackPanel Orientation="Vertical">
                        <NavigationViewItem Icon="AddFriend" Content="Sign in" Visibility="{Binding IsAuthenticated, Mode=OneWay, ConverterParameter=Reverse, Converter={StaticResource BoolInverterToVisibility}}">

                            <interactivity:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Tapped">
                                    <core:EventTriggerBehavior.Actions>
                                        <core:InvokeCommandAction Command="{Binding SignInNavigationItemInvoked}" />
                                    </core:EventTriggerBehavior.Actions>
                                </core:EventTriggerBehavior>
                            </interactivity:Interaction.Behaviors>

                        </NavigationViewItem>
                        <NavigationViewItem Content="{Binding UserInfo.DisplayName}" Visibility="{Binding IsAuthenticated, Mode=OneWay, ConverterParameter=Reverse, Converter={StaticResource BoolToVisibility}}">

                            <interactivity:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Tapped">
                                    <core:EventTriggerBehavior.Actions>
                                        <core:InvokeCommandAction Command="{Binding SignOutNavigationItemInvoked}" />
                                    </core:EventTriggerBehavior.Actions>
                                </core:EventTriggerBehavior>
                            </interactivity:Interaction.Behaviors>

                            <NavigationViewItem.Icon>
                                <FontIcon Glyph="&#xEA4A;"/>
                            </NavigationViewItem.Icon>

                        </NavigationViewItem>
                    </StackPanel>
                </NavigationView.PaneFooter>

            </NavigationView>
        </Grid>
    </Grid>
</Page>
